{"version":3,"sources":["webpack:///./js/input-search-countries.js","webpack:///./js/fetchCountries.js"],"names":["defaults","styling","icons","defaultModules","set","PNotifyMobile","inputRef","document","querySelector","searchResultsRef","addEventListener","debounce","event","innerHTML","searchQuery","target","value","fetch","then","result","json","length","alert","text","type","delay","insertAdjacentHTML","reduce","acc","item","name","createListCountriesMarkup","markupLanguage","languages","capital","population","flag","createCountryPropertiesMarkup","catch","console","log"],"mappings":"4NAMAA,WAASC,QAAU,cACnBD,WAASE,MAAQ,cAEjBC,iBAAeC,IAAIC,EAAe,IAElC,IAAMC,EAAWC,SAASC,cAAc,WAClCC,EAAmBF,SAASC,cAAc,mBAEhDF,EAASI,iBAAiB,QAASC,KACnC,SAAsBC,GACpBH,EAAiBI,UAAY,IChBQC,EDiBXF,EAAMG,OAAOC,MChBhCC,MAAM,yCAC8BH,GACzCI,MAAK,SAAAC,GAAM,OAAIA,EAAOC,WDgBrBF,MAAK,SAAAC,GACAA,EAAOE,OAAS,IAClBC,gBAAM,CACJC,KAAM,iFACNC,KAAM,QACNC,MAAO,MAGPN,EAAOE,QAAU,GAAKF,EAAOE,QAAU,IACzCZ,EAAiBiB,mBACf,YA4BV,SAAmCP,GAQjC,MANE,4BACAA,EAAOQ,QAAO,SAACC,EAAKC,GAElB,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEF,IACH,QAlCMC,CAA0BZ,IAGR,IAAlBA,EAAOE,QACTZ,EAAiBiB,mBACf,YAQV,SAAuCP,GACrC,IAAMa,EAAiBb,EAAO,GAAGc,UAAUN,QAAO,SAACC,EAAKC,GAEtD,OADAD,GAAO,OAAOC,EAAKC,KAAhB,UAEF,IAOH,MANsB,4BAA4BX,EAAO,GAAGW,KAAzC,+HAEqCX,EAAO,GAAGe,QAF/C,oEAGwCf,EAAO,GAAGgB,WAHlD,+DAImCH,EAJnC,gDAKYb,EAAO,GAAGiB,KALtB,4BAZXC,CAA8BlB,OAInCmB,MAAMC,QAAQC,KCxCJ,IAAwB1B,IDcmB,M","file":"main.1bdde115ef43b1d5fca5.js","sourcesContent":["import debounce from 'lodash.debounce';\r\nimport { alert, defaultModules } from '@pnotify/core/dist/PNotify.js';\r\nimport * as PNotifyMobile from '@pnotify/mobile/dist/PNotifyMobile.js';\r\nimport { defaults } from '@pnotify/core';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\nimport fetchCountries from '/js/fetchCountries.js';\r\ndefaults.styling = 'brighttheme';\r\ndefaults.icons = 'brighttheme';\r\n\r\ndefaultModules.set(PNotifyMobile, {});\r\n\r\nconst inputRef = document.querySelector('.search');\r\nconst searchResultsRef = document.querySelector('.search-results');\r\n\r\ninputRef.addEventListener('input', debounce(inputHandler, 500));\r\nfunction inputHandler(event) {\r\n  searchResultsRef.innerHTML = '';\r\n  const countrySearchName = event.target.value;\r\n  fetchCountries(countrySearchName)\r\n    .then(result => {\r\n      if (result.length > 10) {\r\n        alert({\r\n          text: 'Найдено слишком много совпадений. Пожалуйста, введите более конкретный запрос!',\r\n          type: 'error',\r\n          delay: 3000,\r\n        });\r\n      }\r\n      if (result.length >= 2 && result.length <= 10) {\r\n        searchResultsRef.insertAdjacentHTML(\r\n          'beforeend',\r\n          createListCountriesMarkup(result),\r\n        );\r\n      }\r\n      if (result.length === 1) {\r\n        searchResultsRef.insertAdjacentHTML(\r\n          'beforeend',\r\n          createCountryPropertiesMarkup(result),\r\n        );\r\n      }\r\n    })\r\n    .catch(console.log);\r\n}\r\n\r\nfunction createCountryPropertiesMarkup(result) {\r\n  const markupLanguage = result[0].languages.reduce((acc, item) => {\r\n    acc += `<li>${item.name}</li>`;\r\n    return acc;\r\n  }, '');\r\n  const markupCountry = `<h2 class='country-name'>${result[0].name}</h2>\r\n      <div class='wrapper'><div class='country-properties'>\r\n      <p><span class='country-property'>Capital: </span>${result[0].capital}</p>\r\n      <p><span class='country-property'>Population: </span>${result[0].population}</p>\r\n      <h3 class='country-property'>Languages:</h3><ul>${markupLanguage}</ul></div>\r\n      <img height='300px' src=\"${result[0].flag}\" alt=\"flag\"></img></div>`;\r\n  return markupCountry;\r\n}\r\n\r\nfunction createListCountriesMarkup(result) {\r\n  const markup =\r\n    '<ul class=\"country-list\">' +\r\n    result.reduce((acc, item) => {\r\n      acc += `<li>${item.name}</li>`;\r\n      return acc;\r\n    }, '') +\r\n    '</ul>';\r\n  return markup;\r\n}\r\n\r\n","export default function fetchCountries(searchQuery) {\r\n  return fetch(\r\n    `https://restcountries.eu/rest/v2/name/${searchQuery}`,\r\n  ).then(result => result.json());\r\n}\r\n"],"sourceRoot":""}